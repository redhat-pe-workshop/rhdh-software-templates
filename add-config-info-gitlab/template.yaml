apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-existing-app-uber-catalog
  title: Import Existing App to Uber Catalog
  description: Import existing application, autocreate config-info.yaml and conditionally setup techdocs.
  tags:
    - import
    - catalog
    - register
spec:
  owner: parasol-authors
  system: parasol-rhdh
  type: template

  parameters:
    - title: Provide information about Uber Catalog
      properties:
        uberGitlabHost:
          title: Gitlab hostname
          type: string
          description: Your gitlab
          default: gitlab-gitlab.apps.sno.sandbox2280.opentlc.com
        uberGitlabOrganization:
          title: GitLab Organization
          type: string
          default: rhdh
        uberRepositoryName:
          title: Repository name
          type: string

    - title: Provide information about the Repository location of your existing app
      required:
        - gitlabHost
        - gitlabOrganization
        - repositoryName
      properties:
        gitlabHost:
          title: Gitlab hostname
          type: string
          description: Your gitlab
          default: gitlab-gitlab.apps.sno.sandbox2280.opentlc.com
        gitlabOrganization:
          title: GitLab Organization
          type: string
          default: rhdh
        repositoryName:
          title: Repository name
          type: string

    - title: Provide information about the new component
      required:
        - componentOwner
        - componentType
        - componentLifecycle
      properties:
        componentName:
          title: Component Name
          type: string
          description: Name of the created component. If leaved empty the name of the repository will be used.
          default: 
        componentOwner:
          title: Owner
          description: Select an owner from the list or enter a reference to a Group or a User
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        componentType:
          title: Type
          type: string
          description: 'The type of component. Well-known and common values: service, website, library.'
          default: service
        description:
          title: A short description of this component
          type: string
        addTechDocs:
          title: Check to add TechDocs
          type: boolean  
        componentLifecycle:
          title: Lifecycle
          type: string
          description: 'The lifecycle state of the component. Well-known and common values: experimental, production, deprecated.'
          default: experimental

  steps:
  
    # Step2: Create catalog-info file for the component
    - id: catalogTemplate
      name: Fetch catalog-info  template
      action: fetch:template
      input:
        url: ./templates
        targetPath: ./patch
        values:
          applicationType: ${{ parameters.componentType }}
          component_id: ${{ parameters.componentName }}
          componentName: ${{ parameters.componentName }}
          componentLifecycle: ${{ parameters.componentLifecycle }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.gitlabHost }}/${{ parameters.gitlabOrganization }}/${{ parameters.repositoryName }}
          host: ${{ parameters.gitlabHost }}
          owner: ${{ parameters.componentOwner }}
          orgName: ${{ parameters.gitlabOrganization }}
          repoName: ${{ parameters.repositoryName }}

    
    # Merge catalog-info and techdocs into EXISTING repo   - only EXISTING REPO
    - id: publishComponentMergeRequest
      name: Open PR with for all-catalog
      action: publish:gitlab:merge-request
      input: 
        repoUrl: ${{ parameters.uberGitlabHost }}?repo=${{ parameters.uberRepositoryName }}&owner=${{ parameters.uberGitlabOrganization }}
        title: Open PR with catalog-info.yaml
        description: Open PR with catalog-info.yaml
        branchName: ${{ parameters.componentName }}-create
        sourcePath: ./patch
        targetPath: ./${{ parameters.componentName }}
        commitAction: create
        removeSourceBranch: true    


  

    - id: fetch-uber=repo
      name: Fetch uber catalog repo
      action: fetch:template
      targetPath: ../.
      input:
        url: https://${{ parameters.uberGitlabHost }}/${{ parameters.gitlabOrganization }}/${{ parameters.uberRepositoryName }}
        
    - id: append-file
      name: Append To File Or Create New
      action: roadiehq:utils:fs:append
      input:
        path: ./uber-catalog/all-catalog.yaml
        content: "\n    - ../${{ parameters.componentName }}/catalog-info.yaml "

    # Merge ubercatalog  into EXISTING repo  - only EXISTING REPO
    - id: publishUberCatalogMergeRequest
      name: Open PR with all-catalog.yaml
      action: publish:gitlab:merge-request
      input: 
        repoUrl: ${{ parameters.uberGitlabHost }}?repo=${{ parameters.uberRepositoryName }}&owner=${{ parameters.uberGitlabOrganization }}
        commitMessage: Commit for component ${{ parameters.componentName }}
        title: Open PR for update to Uber catalog
        description: Open PR with catalog-info.yaml
        sourcePath: ./uber-catalog
        targetPath: ./uber-catalog
        commitAction: update
        branchName: ubercatalog-${{ parameters.componentName }}-update
        removeSourceBranch: true



  output:
    links:
      - url: ${{ steps.publishMergeRequest.output.mergeRequestUrl }}
        title: 'Click to open the Merge Request; the component will be auto-registered and appear in the catalogue shortly after'
  
