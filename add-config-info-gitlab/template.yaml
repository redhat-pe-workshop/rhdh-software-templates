apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-existing-app
  title: Import Existing App
  description: Import existing application, autocreate config-info.yaml and conditionally setup techdocs
  tags:
    - import
    - catalog
    - register
spec:
  owner: parasol-authors
  system: parasol-rhdh
  type: template

  parameters:
    - title: Provide information about the Repository location
      required:
        - gitlabHost
        - gitlabOrganization
        - repositoryName
      properties:
        gitlabHost:
          title: Gitlab hostname
          type: string
          description: Your gitlab
          default: {{ gitlab_host }}
        gitlabOrganization:
          title: GitLab Organization
          type: string
          default: rhdh
        repositoryName:
          title: Repository name
          type: string
        branchName:
          title: Branch name for PR
          type: string
          default: catalog-info-patch

    - title: Provide information about the new component
      required:
        - componentOwner
        - componentType
        - componentLifecycle
      properties:
        componentName:
          title: Component Name
          type: string
          description: Name of the created component. If leaved empty the name of the repository will be used.
          default: 
        componentOwner:
          title: Owner
          description: Select an owner from the list or enter a reference to a Group or a User
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        componentType:
          title: Type
          type: string
          description: 'The type of component. Well-known and common values: service, website, library.'
          default: service
        description:
          title: A short description of this component
          type: string
        addTechDocs:
          title: Check to add TechDocs
          type: boolean  
        componentLifecycle:
          title: Lifecycle
          type: string
          description: 'The lifecycle state of the component. Well-known and common values: experimental, production, deprecated.'
          default: experimental

  steps:

    - id: catalogTemplate
      name: Create catalog-info.yaml file
      action: fetch:template
      input:
        url: ./template
        targetPath: .
        values:
          componentName: ${{ parameters.componentName }}
          orgName: ${{ parameters.gitlabOrganization }}
          repoName: ${{ parameters.repositoryName }}
          componentLifecycle: ${{ parameters.componentLifecycle }}
          applicationType: ${{ parameters.componentType }}
          owner: ${{ parameters.componentOwner }}

    - id: addTechDocsStep
      name: Add TechDocs skeleton to the repo
      if: ${{ parameters.addTechDocs == true}}
      action: fetch:template
      input:
        url: ./techdocs
        targetPath: .
        values:
          component_id: ${{ parameters.componentName }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.componentOwner }}
          host: ${{ parameters.gitlabHost }}
          destination: ${{ parameters.gitlabHost }}/${{ parameters.gitlabOrganization }}/${{ parameters.repositoryName }}


    - id: publishMergeRequest
      name: Open PR with catalog-info.yaml
      action: publish:gitlab:merge-request
      input: 
        repoUrl: ${{ parameters.gitlabHost }}?repo=${{ parameters.repositoryName }}&owner=${{ parameters.gitlabOrganization }}
        title: Open PR with catalog-info.yaml
        description: Open PR with catalog-info.yaml
        branchName: ${{ parameters.branchName }}
        commitAction: create
        removeSourceBranch: true

  
  output:
    links:
      - url: ${{ steps.publishMergeRequest.output.mergeRequestUrl }}
        title: 'Click to open the Merge Request; the component will be auto-registered and appear in the catalogue shortly after'
  
